services:
  mq:
    image: rabbitmq:3-management-alpine
    container_name: llm-twin-mq
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
      - ./rabbitmq/log/:/var/log/rabbitmq
    restart: always

  qdrant:
    image: qdrant/qdrant:latest
    container_name: llm-twin-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - "6333"
      - "6334"
      - "6335"
    volumes:
      - qdrant-data:/qdrant_data
    restart: always

  postgres:
    image: postgres:15
    container_name: llm-twin-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "54322:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  cdc-listener:
    container_name: llm-twin-cdc-listener
    build:
      context: .
      dockerfile: .docker/Dockerfile.cdc_listener
    env_file:
      - .env
    restart: always # Keep listener running
    depends_on:
      - postgres
      - mq

  api: # Added API service definition
    container_name: llm-twin-api
    build:
      context: .
      dockerfile: .docker/Dockerfile.api # Task 4.8.1 (Note: File currently missing)
    ports:
      - "8000:80" # Task 4.8.3
    env_file:
      - .env # Task 4.8.4
    depends_on: # Task 4.8.4
      - mq
      - postgres
    restart: always

  # Removed data-crawlers service (Task 4.8.2)
  feature_pipeline:
    image: "llm-twin-feature-pipeline"
    container_name: llm-twin-feature-pipeline
    build:
      context: .
      dockerfile: .docker/Dockerfile.feature_pipeline
    environment:
      BYTEWAX_PYTHON_FILE_PATH: "main:flow"
      DEBUG: "false"
      BYTEWAX_KEEP_CONTAINER_ALIVE: "true"
    env_file:
      - .env
    depends_on:
      - mq
      - qdrant
    restart: always

volumes:
  qdrant-data:
  postgres-data:
